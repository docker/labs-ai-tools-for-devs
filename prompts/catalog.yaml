registry:
  mcp-sqlite:
    description: The MCP SQLite promptfile contributes all of the tools necessary to work with SQLite and SQLite databases. The file also includes a prompt to seed the database with initial data which helps to demonstrate what you can do with an SQLite MCP Server.
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/mcp-sqlite.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/sqlite.svg
    tools:
    - {name: read-query}
    - {name: write-query}
    - {name: create-table}
    - {name: list-tables}
    - {name: describe-table}
    - {name: append-insight}
    prompts: 1
    resources: {}
  curl:
    description: This prompt file contains the standard curl tool. In addition to the tool itself, you get a tool to read the latest man page to help clear up any issues. It also contains a prompt to demonstrate how to use the tool in a multi-step process.
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/curl.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/curl.svg
    tools:
    - {name: curl-manual}
    - {name: curl}
    prompts: 1
    resources: {}
  hello world:
    description: Great for testing! This prompt file simply contains a prompt to echo a greeting using a container, and the tool to do so.
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/hello_world.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/docker.svg
    tools:
    - {name: hello-docker}
    prompts: 1
    resources: {}
  ffmpeg:
    description: Use ffmpeg to process video files. This prompt file contains the ffmpeg tool, and a tool to read the latest man page to help clear up any issues. It also contains a prompt to demonstrate how to use the tool in a multi-step process.
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/ffmpeg.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/ffmpeg.svg
    tools:
    - {name: imagemagick-manual}
    - {name: imagemagick}
    - {name: file-exists}
    - {name: ffmpeg}
    prompts: 1
    resources: {}
  explain dockerfiles:
    description: Provide a detailed description, analysis, or annotation of a given Dockerfile. This prompt file contains a tool to read the latest man page to help clear up any issues. It also contains a prompt to run the tool to explain the Dockerfile.
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/explain_dockerfile.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/docker.svg
    tools:
    - {name: cat_file}
    prompts: 1
    resources: {}
  qr code:
    description: Generate a qrcode for an input text string
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/qrencode.md
    icon: https://2.gravatar.com/userimage/39790510/4918b92358fde20da56c0ec8e5ac7a23?size=256
    tools:
    - {name: qrencode}
    prompts: 0
    resources: {}
  speculative_execution:
    description: "Use lorax from Claude. Lorax is a speculative execution tool that can be used  to make edits and run tools in an isolated sandbox. \n"
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/lorax/speculative.md
    icon: https://vonwig.github.io/prompts.docs/img/speculative_hu15687469033092380316.webp
    tools:
    - {name: sandbox-source}
    - {name: sandbox-clone}
    - {name: sandbox-snapshot}
    - {name: sandbox-restore}
    - {name: sandbox-exec}
    - {name: sandbox-delete-file}
    - {name: sandbox-rm}
    - {name: sandbox-diff}
    - {name: sandbox-apply}
    prompts: 1
    resources: {}
  memory:
    description: Give your MCP client a memory system! This prompt file contains a tool to create entities, relations, and observations in a knowledge graph. It also contains a tool to read the latest man page to help clear up any issues. It also contains a prompt to demonstrate how to use the tool in a multi-step process.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/examples/mcp-memory.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/knowledgebase.svg
    tools:
    - {name: create_entities}
    - {name: create_relations}
    - {name: add_observations}
    - {name: delete_entities}
    - {name: delete_observations}
    - {name: delete_relations}
    - {name: read_graph}
    - {name: search_nodes}
    - {name: open_nodes}
    prompts: 0
    resources: {}
  chrome:
    description: Drive a headless Chrome browser to interact with web pages
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/chrome.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/googlechrome.svg
    tools:
    - {name: interact-with-chrome}
    - {name: curl-manual}
    - {name: curl}
    - {name: start-chrome}
    prompts: 1
    resources: {}
  sequentialthinking:
    description: provides a tool for dynamic and reflective problem-solving through a structured thinking process
    ref: github:docker/labs-ai-tools-for-devs?ref=main&path=prompts/examples/sequentialthinking.md
    icon: https://d3t3ozftmdmh3i.cloudfront.net/production/podcast_uploaded_nologo/2454513/2454513-1570719639731-bfdf3620a4e0d.jpg
    tools:
    - {name: sequentialthinking}
    prompts: 0
    resources: {}
  stripe:
    description: Provides a tool to interact with Stripe services over the Stripe API.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/stripe.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/stripe.svg
    secrets:
    - {name: stripe.api_key}
    tools:
    - {name: create_customer}
    - {name: list_customers}
    - {name: create_product}
    - {name: list_products}
    - {name: create_price}
    - {name: list_prices}
    - {name: create_payment_link}
    - {name: create_invoice}
    - {name: create_invoice_item}
    - {name: finalize_invoice}
    - {name: retrieve_balance}
    - {name: create_refund}
    - {name: list_payment_intents}
    - {name: search_documentation}
    prompts: 0
    resources: {}
  brave:
    description: Web and local search using Brave's Search API
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/brave.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/brave.svg
    secrets:
    - {name: brave.api_key}
    tools:
    - {name: brave_web_search}
    - {name: brave_local_search}
    prompts: 0
    resources: {}
  slack:
    description: Provides a tool to interact with Slack Workspaces over the Slack API.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/slack.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/slack.svg
    secrets:
    - {name: slack.team_id}
    - {name: slack.bot_token}
    tools:
    - {name: slack_list_channels}
    - {name: slack_post_message}
    - {name: slack_reply_to_thread}
    - {name: slack_add_reaction}
    - {name: slack_get_channel_history}
    - {name: slack_get_thread_replies}
    - {name: slack_get_users}
    - {name: slack_get_user_profile}
    prompts: 0
    resources: {}
  redis:
    description: provides access to Redis database operations.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/redis.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/redis.svg
    secrets:
    - {name: redis.host}
    - {name: redis.port}
    tools: []
    prompts: 0
    resources: {}
  github:
    description: MCP Server for the GitHub API, enabling file operations, repository management, search functionality, and more.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/github.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/github.svg
    secrets:
    - {name: github.personal_access_token}
    tools:
    - {name: create_or_update_file}
    - {name: search_repositories}
    - {name: create_repository}
    - {name: get_file_contents}
    - {name: push_files}
    - {name: create_issue}
    - {name: create_pull_request}
    - {name: fork_repository}
    - {name: create_branch}
    - {name: list_commits}
    - {name: list_issues}
    - {name: update_issue}
    - {name: add_issue_comment}
    - {name: search_code}
    - {name: search_issues}
    - {name: search_users}
    - {name: get_issue}
    prompts: 0
    resources: {}
  google-maps:
    description: MCP Server for the Google Maps API.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/google-maps.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/google.svg
    secrets:
    - {name: google.api_key}
    tools:
    - {name: maps_geocode}
    - {name: maps_reverse_geocode}
    - {name: maps_search_places}
    - {name: maps_place_details}
    - {name: maps_distance_matrix}
    - {name: maps_elevation}
    - {name: maps_directions}
    prompts: 0
    resources: {}
  gdrive:
    description: This MCP server integrates with Google Drive to allow listing, reading, and searching over files
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/gdrive.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/google.svg
    secrets:
    - {name: google.gcp-oauth.keys.json}
    tools:
    - {name: gdrive_auth}
    prompts: 0
    resources: {}
  time:
    description: MCP Server for the Google Maps API.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/time.md
    icon: https://img.icons8.com/ios/50/time_2.png
    tools:
    - {name: get_current_time}
    - {name: convert_time}
    prompts: 0
    resources: {}
  fetch:
    description: Fetches a URL from the internet and extracts its contents as markdown
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/fetch.md
    icon: https://img.icons8.com/ios/50/fetch-rewards.png
    tools: []
    prompts: 0
    resources: {}
  git:
    description: A Model Context Protocol server for Git repository interaction and automation
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/examples/git.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/git.svg
    tools:
    - {name: git}
    prompts: 1
    resources: {}
  kubernetes:
    description: connect to a Kubernetes cluster and manage it
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/kubernetes.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/kubernetes.svg
    tools: []
    prompts: 0
    resources: {}
  docker:
    description: use the docker cli
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/examples/docker.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/docker.svg
    tools:
    - {name: docker}
    prompts: 0
    resources: {}
  puppeteer:
    description: |
      UNDER CONSTRUCTION (support long running browser cache)
      Browser automation and web scraping using Puppeteer.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/puppeteer.md
    icon: https://img.icons8.com/officel/80/under-construction.png
    tools: []
    prompts: 0
    resources: {}
  filesystem:
    description: |
      Local filesystem access with configurable allowed paths
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/filesystem.md
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    config:
    - name: filesystem
      description: The MCP server is allowed to access these paths
      parameters:
        paths:
          type: array
          items: {type: string}
    tools: []
    prompts: 0
    resources: {}
  webresearch:
    description: |
      UNDER CONSTRUCTION (declarative state caching in volumes) A Model Context Protocol (MCP) server for web research, enabling real-time information retrieval and webpage content extraction for Claude.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/webresearch.md
    icon: https://img.icons8.com/officel/80/under-construction.png
    tools: []
    prompts: 0
    resources: {}
  youtube_transcript:
    description: retrieves transcripts for given YouTube video URLs
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/youtube_transcript.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/youtube.svg
    tools:
    - {name: get_transcript}
    prompts: 0
    resources: {}
  postgres readonly:
    description: provides read-only access to PostgreSQL databases. This server enables LLMs to inspect database schemas and execute read-only queries.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/postgres.md
    icon: https://img.icons8.com/ios/50/postgreesql.png
    secrets:
    - {name: postgres.url}
    tools: []
    prompts: 0
    resources: {}
  postgres:
    description: "provides PostgreSQL database management capabilities. \nThis server assists with analyzing existing PostgreSQL setups, providing implementation guidance, debugging database issues, managing schemas, migrating data, and monitoring database performance.\n"
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/postgresql.md
    icon: https://img.icons8.com/ios/50/postgreesql.png
    tools:
    - {name: analyze_database}
    - {name: get_setup_instructions}
    - {name: debug_database}
    - {name: get_schema_info}
    - {name: create_table}
    - {name: alter_table}
    - {name: export_table_data}
    - {name: import_table_data}
    - {name: copy_between_databases}
    - {name: monitor_database}
    - {name: get_functions}
    - {name: create_function}
    - {name: drop_function}
    - {name: enable_rls}
    - {name: disable_rls}
    - {name: create_rls_policy}
    - {name: drop_rls_policy}
    - {name: get_rls_policies}
    - {name: get_triggers}
    - {name: create_trigger}
    - {name: drop_trigger}
    - {name: set_trigger_state}
    prompts: 0
    resources: {}
  perplexity-ask:
    description: |
      integrates the Sonar API to provide Claude with unparalleled real-time, web-wide research.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/perplexity.md
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    secrets:
    - {name: perplexity-ask.api_key}
    tools:
    - {name: perplexity_ask}
    prompts: 0
    resources: {}
  bootstrap:
    description: |
      bootstrap new tools from your mcp client
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/bootstrap.md
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    tools:
    - {name: tool-registration}
    - {name: write_files}
    - {name: read-file}
    prompts: 0
    resources: {}
  mcp-notion-server:
    description: |
      MCP Server for the Notion API, enabling Claude to interact with Notion workspaces.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/mcp-notion-server.md
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
    secrets:
    - {name: notion.api_token}
    tools:
    - {name: notion_append_block_children}
    - {name: notion_retrieve_block}
    - {name: notion_retrieve_block_children}
    - {name: notion_delete_block}
    - {name: notion_retrieve_page}
    - {name: notion_update_page_properties}
    - {name: notion_list_all_users}
    - {name: notion_retrieve_user}
    - {name: notion_retrieve_bot_user}
    - {name: notion_create_database}
    - {name: notion_query_database}
    - {name: notion_retrieve_database}
    - {name: notion_update_database}
    - {name: notion_create_database_item}
    - {name: notion_create_comment}
    - {name: notion_retrieve_comments}
    - {name: notion_search}
    prompts: 0
    resources: {}
  openapi-schema:
    description: |
      exposes OpenAPI schema information to Large Language Models (LLMs) like Claude. This server allows an LLM to explore and understand OpenAPI specifications through a set of specialized tools.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/openapi-schema.md
    icon: https://avatars.githubusercontent.com/u/182288589?s=200&v=4
  atlassian:
    description: |
      Server for Atlassian products (Confluence and Jira). This integration supports both Atlassian Cloud and Jira Server/Data Center deployments.
    ref: github:docker/labs-ai-tools-for-devs?path=prompts/mcp/atlassian.md
    icon: https://cdn.jsdelivr.net/npm/simple-icons@v7/icons/atlassian.svg
    secrets:
      - name: atlassian.jira.token
        required: false
      - name: atlassian.confluence.token
        required: false
    config:
      - name: atlassian
        description: The MCP server is allowed to access these paths
        parameters:
          confluence:
            type: object
            properties:
              url:
                type: string
              username:
                type: string
          jira:
            type: object
            properties:
              url:
                type: string
              username:
                type: string
